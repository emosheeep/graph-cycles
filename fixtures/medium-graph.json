[
	[
		"CommentBlock",
		[]
	],
	[
		"CommentLine",
		[]
	],
	[
		"Comment",
		[
			"CommentBlock",
			"CommentLine"
		]
	],
	[
		"SourceLocation",
		[]
	],
	[
		"Node",
		[
			"TryStatement",
			"TupleExpression",
			"TupleTypeAnnotation",
			"TypeAlias",
			"TypeAnnotation",
			"TypeCastExpression",
			"TypeParameter",
			"TypeParameterDeclaration",
			"TypeParameterInstantiation",
			"TypeofTypeAnnotation",
			"UnaryExpression",
			"UnaryLike",
			"UnionTypeAnnotation",
			"UpdateExpression",
			"UserWhitespacable",
			"V8IntrinsicIdentifier",
			"VariableDeclaration",
			"VariableDeclarator",
			"Variance",
			"VoidTypeAnnotation",
			"While",
			"WhileStatement",
			"WithStatement",
			"YieldExpression"
		]
	],
	[
		"ArrayExpression",
		[
			"Expression",
			"SpreadElement"
		]
	],
	[
		"AssignmentExpression",
		[
			"LVal",
			"Expression"
		]
	],
	[
		"BinaryExpression",
		[
			"Expression",
			"PrivateName"
		]
	],
	[
		"InterpreterDirective",
		[]
	],
	[
		"Directive",
		[
			"DirectiveLiteral"
		]
	],
	[
		"DirectiveLiteral",
		[]
	],
	[
		"BlockStatement",
		[
			"Statement",
			"Directive"
		]
	],
	[
		"BreakStatement",
		[
			"Identifier"
		]
	],
	[
		"CallExpression",
		[
			"Expression",
			"V8IntrinsicIdentifier",
			"SpreadElement",
			"JSXNamespacedName",
			"ArgumentPlaceholder",
			"TypeParameterInstantiation",
			"TSTypeParameterInstantiation"
		]
	],
	[
		"CatchClause",
		[
			"Identifier",
			"ArrayPattern",
			"ObjectPattern",
			"BlockStatement"
		]
	],
	[
		"ConditionalExpression",
		[
			"Expression"
		]
	],
	[
		"ContinueStatement",
		[
			"Identifier"
		]
	],
	[
		"DebuggerStatement",
		[]
	],
	[
		"DoWhileStatement",
		[
			"Expression",
			"Statement"
		]
	],
	[
		"EmptyStatement",
		[]
	],
	[
		"ExpressionStatement",
		[
			"Expression"
		]
	],
	[
		"File",
		[
			"Program",
			"CommentBlock",
			"CommentLine"
		]
	],
	[
		"ForInStatement",
		[
			"VariableDeclaration",
			"LVal",
			"Expression",
			"Statement"
		]
	],
	[
		"ForStatement",
		[
			"VariableDeclaration",
			"Expression",
			"Statement"
		]
	],
	[
		"FunctionDeclaration",
		[
			"Identifier",
			"Pattern",
			"RestElement",
			"TSParameterProperty",
			"BlockStatement",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop",
			"TypeParameterDeclaration",
			"TSTypeParameterDeclaration"
		]
	],
	[
		"FunctionExpression",
		[
			"Identifier",
			"Pattern",
			"RestElement",
			"TSParameterProperty",
			"BlockStatement",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop",
			"TypeParameterDeclaration",
			"TSTypeParameterDeclaration"
		]
	],
	[
		"Identifier",
		[
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop"
		]
	],
	[
		"IfStatement",
		[
			"Expression",
			"Statement"
		]
	],
	[
		"LabeledStatement",
		[
			"Identifier",
			"Statement"
		]
	],
	[
		"StringLiteral",
		[]
	],
	[
		"NumericLiteral",
		[]
	],
	[
		"NullLiteral",
		[]
	],
	[
		"BooleanLiteral",
		[]
	],
	[
		"RegExpLiteral",
		[]
	],
	[
		"LogicalExpression",
		[
			"Expression"
		]
	],
	[
		"MemberExpression",
		[
			"Expression",
			"Identifier",
			"PrivateName"
		]
	],
	[
		"NewExpression",
		[
			"Expression",
			"V8IntrinsicIdentifier",
			"SpreadElement",
			"JSXNamespacedName",
			"ArgumentPlaceholder",
			"TypeParameterInstantiation",
			"TSTypeParameterInstantiation"
		]
	],
	[
		"Program",
		[
			"Statement",
			"Directive",
			"InterpreterDirective"
		]
	],
	[
		"ObjectExpression",
		[
			"ObjectMethod",
			"ObjectProperty",
			"SpreadElement"
		]
	],
	[
		"ObjectMethod",
		[
			"Expression",
			"Identifier",
			"StringLiteral",
			"NumericLiteral",
			"Pattern",
			"RestElement",
			"TSParameterProperty",
			"BlockStatement",
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop",
			"TypeParameterDeclaration",
			"TSTypeParameterDeclaration"
		]
	],
	[
		"ObjectProperty",
		[
			"Expression",
			"Identifier",
			"StringLiteral",
			"NumericLiteral",
			"PatternLike",
			"Decorator"
		]
	],
	[
		"RestElement",
		[
			"LVal",
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop"
		]
	],
	[
		"ReturnStatement",
		[
			"Expression"
		]
	],
	[
		"SequenceExpression",
		[
			"Expression"
		]
	],
	[
		"ParenthesizedExpression",
		[
			"Expression"
		]
	],
	[
		"SwitchCase",
		[
			"Expression",
			"Statement"
		]
	],
	[
		"SwitchStatement",
		[
			"Expression",
			"SwitchCase"
		]
	],
	[
		"ThisExpression",
		[]
	],
	[
		"ThrowStatement",
		[
			"Expression"
		]
	],
	[
		"TryStatement",
		[
			"BlockStatement",
			"CatchClause"
		]
	],
	[
		"UnaryExpression",
		[
			"Expression"
		]
	],
	[
		"UpdateExpression",
		[
			"Expression"
		]
	],
	[
		"VariableDeclaration",
		[
			"VariableDeclarator"
		]
	],
	[
		"VariableDeclarator",
		[
			"LVal",
			"Expression"
		]
	],
	[
		"WhileStatement",
		[
			"Expression",
			"Statement"
		]
	],
	[
		"WithStatement",
		[
			"Expression",
			"Statement"
		]
	],
	[
		"AssignmentPattern",
		[
			"Identifier",
			"ObjectPattern",
			"ArrayPattern",
			"MemberExpression",
			"Expression",
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop"
		]
	],
	[
		"ArrayPattern",
		[
			"PatternLike",
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop"
		]
	],
	[
		"ArrowFunctionExpression",
		[
			"Identifier",
			"Pattern",
			"RestElement",
			"TSParameterProperty",
			"BlockStatement",
			"Expression",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop",
			"TypeParameterDeclaration",
			"TSTypeParameterDeclaration"
		]
	],
	[
		"ClassBody",
		[
			"ClassMethod",
			"ClassPrivateMethod",
			"ClassProperty",
			"ClassPrivateProperty",
			"TSDeclareMethod",
			"TSIndexSignature"
		]
	],
	[
		"ClassExpression",
		[
			"Identifier",
			"Expression",
			"ClassBody",
			"Decorator",
			"TSExpressionWithTypeArguments",
			"ClassImplements",
			"InterfaceExtends",
			"TypeParameterInstantiation",
			"TSTypeParameterInstantiation",
			"TypeParameterDeclaration",
			"TSTypeParameterDeclaration",
			"Noop"
		]
	],
	[
		"ClassDeclaration",
		[
			"Identifier",
			"Expression",
			"ClassBody",
			"Decorator",
			"TSExpressionWithTypeArguments",
			"ClassImplements",
			"InterfaceExtends",
			"TypeParameterInstantiation",
			"TSTypeParameterInstantiation",
			"TypeParameterDeclaration",
			"TSTypeParameterDeclaration",
			"Noop"
		]
	],
	[
		"ExportAllDeclaration",
		[
			"StringLiteral",
			"ImportAttribute"
		]
	],
	[
		"ExportDefaultDeclaration",
		[
			"FunctionDeclaration",
			"TSDeclareFunction",
			"ClassDeclaration",
			"Expression"
		]
	],
	[
		"ExportNamedDeclaration",
		[
			"Declaration",
			"ExportSpecifier",
			"ExportDefaultSpecifier",
			"ExportNamespaceSpecifier",
			"StringLiteral",
			"ImportAttribute"
		]
	],
	[
		"ExportSpecifier",
		[
			"Identifier",
			"StringLiteral"
		]
	],
	[
		"ForOfStatement",
		[
			"VariableDeclaration",
			"LVal",
			"Expression",
			"Statement"
		]
	],
	[
		"ImportDeclaration",
		[
			"ImportSpecifier",
			"ImportDefaultSpecifier",
			"ImportNamespaceSpecifier",
			"StringLiteral",
			"ImportAttribute"
		]
	],
	[
		"ImportDefaultSpecifier",
		[
			"Identifier"
		]
	],
	[
		"ImportNamespaceSpecifier",
		[
			"Identifier"
		]
	],
	[
		"ImportSpecifier",
		[
			"Identifier",
			"StringLiteral"
		]
	],
	[
		"MetaProperty",
		[
			"Identifier"
		]
	],
	[
		"ClassMethod",
		[
			"Identifier",
			"StringLiteral",
			"NumericLiteral",
			"Expression",
			"Pattern",
			"RestElement",
			"TSParameterProperty",
			"BlockStatement",
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop",
			"TypeParameterDeclaration",
			"TSTypeParameterDeclaration"
		]
	],
	[
		"ObjectPattern",
		[
			"RestElement",
			"ObjectProperty",
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop"
		]
	],
	[
		"SpreadElement",
		[
			"Expression"
		]
	],
	[
		"Super",
		[]
	],
	[
		"TaggedTemplateExpression",
		[
			"Expression",
			"TemplateLiteral",
			"TypeParameterInstantiation",
			"TSTypeParameterInstantiation"
		]
	],
	[
		"TemplateElement",
		[]
	],
	[
		"TemplateLiteral",
		[
			"TemplateElement",
			"Expression",
			"TSType"
		]
	],
	[
		"YieldExpression",
		[
			"Expression"
		]
	],
	[
		"AwaitExpression",
		[
			"Expression"
		]
	],
	[
		"Import",
		[]
	],
	[
		"BigIntLiteral",
		[]
	],
	[
		"ExportNamespaceSpecifier",
		[
			"Identifier"
		]
	],
	[
		"OptionalMemberExpression",
		[
			"Expression",
			"Identifier"
		]
	],
	[
		"OptionalCallExpression",
		[
			"Expression",
			"SpreadElement",
			"JSXNamespacedName",
			"ArgumentPlaceholder",
			"TypeParameterInstantiation",
			"TSTypeParameterInstantiation"
		]
	],
	[
		"AnyTypeAnnotation",
		[]
	],
	[
		"ArrayTypeAnnotation",
		[
			"FlowType"
		]
	],
	[
		"BooleanTypeAnnotation",
		[]
	],
	[
		"BooleanLiteralTypeAnnotation",
		[]
	],
	[
		"NullLiteralTypeAnnotation",
		[]
	],
	[
		"ClassImplements",
		[
			"Identifier",
			"TypeParameterInstantiation"
		]
	],
	[
		"DeclareClass",
		[
			"Identifier",
			"TypeParameterDeclaration",
			"InterfaceExtends",
			"ObjectTypeAnnotation",
			"ClassImplements"
		]
	],
	[
		"DeclareFunction",
		[
			"Identifier",
			"DeclaredPredicate"
		]
	],
	[
		"DeclareInterface",
		[
			"Identifier",
			"TypeParameterDeclaration",
			"InterfaceExtends",
			"ObjectTypeAnnotation",
			"ClassImplements"
		]
	],
	[
		"DeclareModule",
		[
			"Identifier",
			"StringLiteral",
			"BlockStatement"
		]
	],
	[
		"DeclareModuleExports",
		[
			"TypeAnnotation"
		]
	],
	[
		"DeclareTypeAlias",
		[
			"Identifier",
			"TypeParameterDeclaration",
			"FlowType"
		]
	],
	[
		"DeclareOpaqueType",
		[
			"Identifier",
			"TypeParameterDeclaration",
			"FlowType"
		]
	],
	[
		"DeclareVariable",
		[
			"Identifier"
		]
	],
	[
		"DeclareExportDeclaration",
		[
			"Flow",
			"ExportSpecifier",
			"ExportNamespaceSpecifier",
			"StringLiteral"
		]
	],
	[
		"DeclareExportAllDeclaration",
		[
			"StringLiteral"
		]
	],
	[
		"DeclaredPredicate",
		[
			"Flow"
		]
	],
	[
		"ExistsTypeAnnotation",
		[]
	],
	[
		"FunctionTypeAnnotation",
		[
			"TypeParameterDeclaration",
			"FunctionTypeParam",
			"FlowType"
		]
	],
	[
		"FunctionTypeParam",
		[
			"Identifier",
			"FlowType"
		]
	],
	[
		"GenericTypeAnnotation",
		[
			"Identifier",
			"QualifiedTypeIdentifier",
			"TypeParameterInstantiation"
		]
	],
	[
		"InferredPredicate",
		[]
	],
	[
		"InterfaceExtends",
		[
			"Identifier",
			"QualifiedTypeIdentifier",
			"TypeParameterInstantiation"
		]
	],
	[
		"InterfaceDeclaration",
		[
			"Identifier",
			"TypeParameterDeclaration",
			"InterfaceExtends",
			"ObjectTypeAnnotation",
			"ClassImplements"
		]
	],
	[
		"InterfaceTypeAnnotation",
		[
			"InterfaceExtends",
			"ObjectTypeAnnotation"
		]
	],
	[
		"IntersectionTypeAnnotation",
		[
			"FlowType"
		]
	],
	[
		"MixedTypeAnnotation",
		[]
	],
	[
		"EmptyTypeAnnotation",
		[]
	],
	[
		"NullableTypeAnnotation",
		[
			"FlowType"
		]
	],
	[
		"NumberLiteralTypeAnnotation",
		[]
	],
	[
		"NumberTypeAnnotation",
		[]
	],
	[
		"ObjectTypeAnnotation",
		[
			"ObjectTypeProperty",
			"ObjectTypeSpreadProperty",
			"ObjectTypeIndexer",
			"ObjectTypeCallProperty",
			"ObjectTypeInternalSlot"
		]
	],
	[
		"ObjectTypeInternalSlot",
		[
			"Identifier",
			"FlowType"
		]
	],
	[
		"ObjectTypeCallProperty",
		[
			"FlowType"
		]
	],
	[
		"ObjectTypeIndexer",
		[
			"Identifier",
			"FlowType",
			"Variance"
		]
	],
	[
		"ObjectTypeProperty",
		[
			"Identifier",
			"StringLiteral",
			"FlowType",
			"Variance"
		]
	],
	[
		"ObjectTypeSpreadProperty",
		[
			"FlowType"
		]
	],
	[
		"OpaqueType",
		[
			"Identifier",
			"TypeParameterDeclaration",
			"FlowType"
		]
	],
	[
		"QualifiedTypeIdentifier",
		[
			"Identifier",
			"QualifiedTypeIdentifier"
		]
	],
	[
		"StringLiteralTypeAnnotation",
		[]
	],
	[
		"StringTypeAnnotation",
		[]
	],
	[
		"SymbolTypeAnnotation",
		[]
	],
	[
		"ThisTypeAnnotation",
		[]
	],
	[
		"TupleTypeAnnotation",
		[
			"FlowType"
		]
	],
	[
		"TypeofTypeAnnotation",
		[
			"FlowType"
		]
	],
	[
		"TypeAlias",
		[
			"Identifier",
			"TypeParameterDeclaration",
			"FlowType"
		]
	],
	[
		"TypeAnnotation",
		[
			"FlowType"
		]
	],
	[
		"TypeCastExpression",
		[
			"Expression",
			"TypeAnnotation"
		]
	],
	[
		"TypeParameter",
		[
			"TypeAnnotation",
			"FlowType",
			"Variance"
		]
	],
	[
		"TypeParameterDeclaration",
		[
			"TypeParameter"
		]
	],
	[
		"TypeParameterInstantiation",
		[
			"FlowType"
		]
	],
	[
		"UnionTypeAnnotation",
		[
			"FlowType"
		]
	],
	[
		"Variance",
		[]
	],
	[
		"VoidTypeAnnotation",
		[]
	],
	[
		"EnumDeclaration",
		[
			"Identifier",
			"EnumBooleanBody",
			"EnumNumberBody",
			"EnumStringBody",
			"EnumSymbolBody"
		]
	],
	[
		"EnumBooleanBody",
		[
			"EnumBooleanMember"
		]
	],
	[
		"EnumNumberBody",
		[
			"EnumNumberMember"
		]
	],
	[
		"EnumStringBody",
		[
			"EnumStringMember",
			"EnumDefaultedMember"
		]
	],
	[
		"EnumSymbolBody",
		[
			"EnumDefaultedMember"
		]
	],
	[
		"EnumBooleanMember",
		[
			"Identifier",
			"BooleanLiteral"
		]
	],
	[
		"EnumNumberMember",
		[
			"Identifier",
			"NumericLiteral"
		]
	],
	[
		"EnumStringMember",
		[
			"Identifier",
			"StringLiteral"
		]
	],
	[
		"EnumDefaultedMember",
		[
			"Identifier"
		]
	],
	[
		"JSXAttribute",
		[
			"JSXIdentifier",
			"JSXNamespacedName",
			"JSXElement",
			"JSXFragment",
			"StringLiteral",
			"JSXExpressionContainer"
		]
	],
	[
		"JSXClosingElement",
		[
			"JSXIdentifier",
			"JSXMemberExpression",
			"JSXNamespacedName"
		]
	],
	[
		"JSXElement",
		[
			"JSXOpeningElement",
			"JSXClosingElement",
			"JSXText",
			"JSXExpressionContainer",
			"JSXSpreadChild",
			"JSXElement",
			"JSXFragment"
		]
	],
	[
		"JSXEmptyExpression",
		[]
	],
	[
		"JSXExpressionContainer",
		[
			"Expression",
			"JSXEmptyExpression"
		]
	],
	[
		"JSXSpreadChild",
		[
			"Expression"
		]
	],
	[
		"JSXIdentifier",
		[]
	],
	[
		"JSXMemberExpression",
		[
			"JSXMemberExpression",
			"JSXIdentifier"
		]
	],
	[
		"JSXNamespacedName",
		[
			"JSXIdentifier"
		]
	],
	[
		"JSXOpeningElement",
		[
			"JSXIdentifier",
			"JSXMemberExpression",
			"JSXNamespacedName",
			"JSXAttribute",
			"JSXSpreadAttribute",
			"TypeParameterInstantiation",
			"TSTypeParameterInstantiation"
		]
	],
	[
		"JSXSpreadAttribute",
		[
			"Expression"
		]
	],
	[
		"JSXText",
		[]
	],
	[
		"JSXFragment",
		[
			"JSXOpeningFragment",
			"JSXClosingFragment",
			"JSXText",
			"JSXExpressionContainer",
			"JSXSpreadChild",
			"JSXElement",
			"JSXFragment"
		]
	],
	[
		"JSXOpeningFragment",
		[]
	],
	[
		"JSXClosingFragment",
		[]
	],
	[
		"Noop",
		[]
	],
	[
		"Placeholder",
		[
			"Identifier"
		]
	],
	[
		"V8IntrinsicIdentifier",
		[]
	],
	[
		"ArgumentPlaceholder",
		[]
	],
	[
		"BindExpression",
		[
			"Expression"
		]
	],
	[
		"ClassProperty",
		[
			"Identifier",
			"StringLiteral",
			"NumericLiteral",
			"Expression",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop",
			"Decorator"
		]
	],
	[
		"PipelineTopicExpression",
		[
			"Expression"
		]
	],
	[
		"PipelineBareFunction",
		[
			"Expression"
		]
	],
	[
		"PipelinePrimaryTopicReference",
		[]
	],
	[
		"ClassPrivateProperty",
		[
			"PrivateName",
			"Expression",
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop"
		]
	],
	[
		"ClassPrivateMethod",
		[
			"PrivateName",
			"Identifier",
			"Pattern",
			"RestElement",
			"TSParameterProperty",
			"BlockStatement",
			"Decorator",
			"TypeAnnotation",
			"TSTypeAnnotation",
			"Noop",
			"TypeParameterDeclaration",
			"TSTypeParameterDeclaration"
		]
	],
	[
		"ImportAttribute",
		[
			"Identifier",
			"StringLiteral"
		]
	],
	[
		"Decorator",
		[
			"Expression"
		]
	],
	[
		"DoExpression",
		[
			"BlockStatement"
		]
	],
	[
		"ExportDefaultSpecifier",
		[
			"Identifier"
		]
	],
	[
		"PrivateName",
		[
			"Identifier"
		]
	],
	[
		"RecordExpression",
		[
			"ObjectProperty",
			"SpreadElement"
		]
	],
	[
		"TupleExpression",
		[
			"Expression",
			"SpreadElement"
		]
	],
	[
		"DecimalLiteral",
		[]
	],
	[
		"StaticBlock",
		[
			"Statement"
		]
	],
	[
		"TSParameterProperty",
		[
			"Identifier",
			"AssignmentPattern"
		]
	],
	[
		"TSDeclareFunction",
		[
			"Identifier",
			"TSTypeParameterDeclaration",
			"Noop",
			"Pattern",
			"RestElement",
			"TSParameterProperty",
			"TSTypeAnnotation"
		]
	],
	[
		"TSDeclareMethod",
		[
			"Decorator",
			"Identifier",
			"StringLiteral",
			"NumericLiteral",
			"Expression",
			"TSTypeParameterDeclaration",
			"Noop",
			"Pattern",
			"RestElement",
			"TSParameterProperty",
			"TSTypeAnnotation"
		]
	],
	[
		"TSQualifiedName",
		[
			"TSEntityName",
			"Identifier"
		]
	],
	[
		"TSCallSignatureDeclaration",
		[
			"TSTypeParameterDeclaration",
			"Identifier",
			"RestElement",
			"TSTypeAnnotation"
		]
	],
	[
		"TSConstructSignatureDeclaration",
		[
			"TSTypeParameterDeclaration",
			"Identifier",
			"RestElement",
			"TSTypeAnnotation"
		]
	],
	[
		"TSPropertySignature",
		[
			"Expression",
			"TSTypeAnnotation"
		]
	],
	[
		"TSMethodSignature",
		[
			"Expression",
			"TSTypeParameterDeclaration",
			"Identifier",
			"RestElement",
			"TSTypeAnnotation"
		]
	],
	[
		"TSIndexSignature",
		[
			"Identifier",
			"TSTypeAnnotation"
		]
	],
	[
		"TSAnyKeyword",
		[]
	],
	[
		"TSBooleanKeyword",
		[]
	],
	[
		"TSBigIntKeyword",
		[]
	],
	[
		"TSIntrinsicKeyword",
		[]
	],
	[
		"TSNeverKeyword",
		[]
	],
	[
		"TSNullKeyword",
		[]
	],
	[
		"TSNumberKeyword",
		[]
	],
	[
		"TSObjectKeyword",
		[]
	],
	[
		"TSStringKeyword",
		[]
	],
	[
		"TSSymbolKeyword",
		[]
	],
	[
		"TSUndefinedKeyword",
		[]
	],
	[
		"TSUnknownKeyword",
		[]
	],
	[
		"TSVoidKeyword",
		[]
	],
	[
		"TSThisType",
		[]
	],
	[
		"TSFunctionType",
		[
			"TSTypeParameterDeclaration",
			"Identifier",
			"RestElement",
			"TSTypeAnnotation"
		]
	],
	[
		"TSConstructorType",
		[
			"TSTypeParameterDeclaration",
			"Identifier",
			"RestElement",
			"TSTypeAnnotation"
		]
	],
	[
		"TSTypeReference",
		[
			"TSEntityName",
			"TSTypeParameterInstantiation"
		]
	],
	[
		"TSTypePredicate",
		[
			"Identifier",
			"TSThisType",
			"TSTypeAnnotation"
		]
	],
	[
		"TSTypeQuery",
		[
			"TSEntityName",
			"TSImportType"
		]
	],
	[
		"TSTypeLiteral",
		[
			"TSTypeElement"
		]
	],
	[
		"TSArrayType",
		[
			"TSType"
		]
	],
	[
		"TSTupleType",
		[
			"TSType",
			"TSNamedTupleMember"
		]
	],
	[
		"TSOptionalType",
		[
			"TSType"
		]
	],
	[
		"TSRestType",
		[
			"TSType"
		]
	],
	[
		"TSNamedTupleMember",
		[
			"Identifier",
			"TSType"
		]
	],
	[
		"TSUnionType",
		[
			"TSType"
		]
	],
	[
		"TSIntersectionType",
		[
			"TSType"
		]
	],
	[
		"TSConditionalType",
		[
			"TSType"
		]
	],
	[
		"TSInferType",
		[
			"TSTypeParameter"
		]
	],
	[
		"TSParenthesizedType",
		[
			"TSType"
		]
	],
	[
		"TSTypeOperator",
		[
			"TSType"
		]
	],
	[
		"TSIndexedAccessType",
		[
			"TSType"
		]
	],
	[
		"TSMappedType",
		[
			"TSTypeParameter",
			"TSType"
		]
	],
	[
		"TSLiteralType",
		[
			"NumericLiteral",
			"StringLiteral",
			"BooleanLiteral",
			"BigIntLiteral"
		]
	],
	[
		"TSExpressionWithTypeArguments",
		[
			"TSEntityName",
			"TSTypeParameterInstantiation"
		]
	],
	[
		"TSInterfaceDeclaration",
		[
			"Identifier",
			"TSTypeParameterDeclaration",
			"TSExpressionWithTypeArguments",
			"TSInterfaceBody"
		]
	],
	[
		"TSInterfaceBody",
		[
			"TSTypeElement"
		]
	],
	[
		"TSTypeAliasDeclaration",
		[
			"Identifier",
			"TSTypeParameterDeclaration",
			"TSType"
		]
	],
	[
		"TSAsExpression",
		[
			"Expression",
			"TSType"
		]
	],
	[
		"TSTypeAssertion",
		[
			"TSType",
			"Expression"
		]
	],
	[
		"TSEnumDeclaration",
		[
			"Identifier",
			"TSEnumMember",
			"Expression"
		]
	],
	[
		"TSEnumMember",
		[
			"Identifier",
			"StringLiteral",
			"Expression"
		]
	],
	[
		"TSModuleDeclaration",
		[
			"Identifier",
			"StringLiteral",
			"TSModuleBlock",
			"TSModuleDeclaration"
		]
	],
	[
		"TSModuleBlock",
		[
			"Statement"
		]
	],
	[
		"TSImportType",
		[
			"StringLiteral",
			"TSEntityName",
			"TSTypeParameterInstantiation"
		]
	],
	[
		"TSImportEqualsDeclaration",
		[
			"Identifier",
			"TSEntityName",
			"TSExternalModuleReference"
		]
	],
	[
		"TSExternalModuleReference",
		[
			"StringLiteral"
		]
	],
	[
		"TSNonNullExpression",
		[
			"Expression"
		]
	],
	[
		"TSExportAssignment",
		[
			"Expression"
		]
	],
	[
		"TSNamespaceExportDeclaration",
		[
			"Identifier"
		]
	],
	[
		"TSTypeAnnotation",
		[
			"TSType"
		]
	],
	[
		"TSTypeParameterInstantiation",
		[
			"TSType"
		]
	],
	[
		"TSTypeParameterDeclaration",
		[
			"TSTypeParameter"
		]
	],
	[
		"TSTypeParameter",
		[
			"TSType"
		]
	],
	[
		"NumberLiteral",
		[
			"NumericLiteral"
		]
	],
	[
		"RegexLiteral",
		[
			"RegExpLiteral"
		]
	],
	[
		"RestProperty",
		[
			"RestElement"
		]
	],
	[
		"SpreadProperty",
		[
			"SpreadElement"
		]
	],
	[
		"Expression",
		[
			"ArrayExpression",
			"AssignmentExpression",
			"BinaryExpression",
			"CallExpression",
			"ConditionalExpression",
			"FunctionExpression",
			"Identifier",
			"StringLiteral",
			"NumericLiteral",
			"NullLiteral",
			"BooleanLiteral",
			"RegExpLiteral",
			"LogicalExpression",
			"MemberExpression",
			"NewExpression",
			"ObjectExpression",
			"SequenceExpression",
			"ParenthesizedExpression",
			"ThisExpression",
			"UnaryExpression",
			"UpdateExpression",
			"ArrowFunctionExpression",
			"ClassExpression",
			"MetaProperty",
			"Super",
			"TaggedTemplateExpression",
			"TemplateLiteral",
			"YieldExpression",
			"AwaitExpression",
			"Import",
			"BigIntLiteral",
			"OptionalMemberExpression",
			"OptionalCallExpression",
			"TypeCastExpression",
			"JSXElement",
			"JSXFragment",
			"BindExpression",
			"PipelinePrimaryTopicReference",
			"DoExpression",
			"RecordExpression",
			"TupleExpression",
			"DecimalLiteral",
			"TSAsExpression",
			"TSTypeAssertion",
			"TSNonNullExpression"
		]
	],
	[
		"Binary",
		[
			"BinaryExpression",
			"LogicalExpression"
		]
	],
	[
		"Scopable",
		[
			"BlockStatement",
			"CatchClause",
			"DoWhileStatement",
			"ForInStatement",
			"ForStatement",
			"FunctionDeclaration",
			"FunctionExpression",
			"Program",
			"ObjectMethod",
			"SwitchStatement",
			"WhileStatement",
			"ArrowFunctionExpression",
			"ClassExpression",
			"ClassDeclaration",
			"ForOfStatement",
			"ClassMethod",
			"ClassPrivateMethod",
			"StaticBlock",
			"TSModuleBlock"
		]
	],
	[
		"BlockParent",
		[
			"BlockStatement",
			"CatchClause",
			"DoWhileStatement",
			"ForInStatement",
			"ForStatement",
			"FunctionDeclaration",
			"FunctionExpression",
			"Program",
			"ObjectMethod",
			"SwitchStatement",
			"WhileStatement",
			"ArrowFunctionExpression",
			"ForOfStatement",
			"ClassMethod",
			"ClassPrivateMethod",
			"StaticBlock",
			"TSModuleBlock"
		]
	],
	[
		"Block",
		[
			"BlockStatement",
			"Program",
			"TSModuleBlock"
		]
	],
	[
		"Statement",
		[
			"BlockStatement",
			"BreakStatement",
			"ContinueStatement",
			"DebuggerStatement",
			"DoWhileStatement",
			"EmptyStatement",
			"ExpressionStatement",
			"ForInStatement",
			"ForStatement",
			"FunctionDeclaration",
			"IfStatement",
			"LabeledStatement",
			"ReturnStatement",
			"SwitchStatement",
			"ThrowStatement",
			"TryStatement",
			"VariableDeclaration",
			"WhileStatement",
			"WithStatement",
			"ClassDeclaration",
			"ExportAllDeclaration",
			"ExportDefaultDeclaration",
			"ExportNamedDeclaration",
			"ForOfStatement",
			"ImportDeclaration",
			"DeclareClass",
			"DeclareFunction",
			"DeclareInterface",
			"DeclareModule",
			"DeclareModuleExports",
			"DeclareTypeAlias",
			"DeclareOpaqueType",
			"DeclareVariable",
			"DeclareExportDeclaration",
			"DeclareExportAllDeclaration",
			"InterfaceDeclaration",
			"OpaqueType",
			"TypeAlias",
			"EnumDeclaration",
			"TSDeclareFunction",
			"TSInterfaceDeclaration",
			"TSTypeAliasDeclaration",
			"TSEnumDeclaration",
			"TSModuleDeclaration",
			"TSImportEqualsDeclaration",
			"TSExportAssignment",
			"TSNamespaceExportDeclaration"
		]
	],
	[
		"Terminatorless",
		[
			"BreakStatement",
			"ContinueStatement",
			"ReturnStatement",
			"ThrowStatement",
			"YieldExpression",
			"AwaitExpression"
		]
	],
	[
		"CompletionStatement",
		[
			"BreakStatement",
			"ContinueStatement",
			"ReturnStatement",
			"ThrowStatement"
		]
	],
	[
		"Conditional",
		[
			"ConditionalExpression",
			"IfStatement"
		]
	],
	[
		"Loop",
		[
			"DoWhileStatement",
			"ForInStatement",
			"ForStatement",
			"WhileStatement",
			"ForOfStatement"
		]
	],
	[
		"While",
		[
			"DoWhileStatement",
			"WhileStatement"
		]
	],
	[
		"ExpressionWrapper",
		[
			"ExpressionStatement",
			"ParenthesizedExpression",
			"TypeCastExpression"
		]
	],
	[
		"For",
		[
			"ForInStatement",
			"ForStatement",
			"ForOfStatement"
		]
	],
	[
		"ForXStatement",
		[
			"ForInStatement",
			"ForOfStatement"
		]
	],
	[
		"Function",
		[
			"FunctionDeclaration",
			"FunctionExpression",
			"ObjectMethod",
			"ArrowFunctionExpression",
			"ClassMethod",
			"ClassPrivateMethod"
		]
	],
	[
		"FunctionParent",
		[
			"FunctionDeclaration",
			"FunctionExpression",
			"ObjectMethod",
			"ArrowFunctionExpression",
			"ClassMethod",
			"ClassPrivateMethod"
		]
	],
	[
		"Pureish",
		[
			"FunctionDeclaration",
			"FunctionExpression",
			"StringLiteral",
			"NumericLiteral",
			"NullLiteral",
			"BooleanLiteral",
			"RegExpLiteral",
			"ArrowFunctionExpression",
			"BigIntLiteral",
			"DecimalLiteral"
		]
	],
	[
		"Declaration",
		[
			"FunctionDeclaration",
			"VariableDeclaration",
			"ClassDeclaration",
			"ExportAllDeclaration",
			"ExportDefaultDeclaration",
			"ExportNamedDeclaration",
			"ImportDeclaration",
			"DeclareClass",
			"DeclareFunction",
			"DeclareInterface",
			"DeclareModule",
			"DeclareModuleExports",
			"DeclareTypeAlias",
			"DeclareOpaqueType",
			"DeclareVariable",
			"DeclareExportDeclaration",
			"DeclareExportAllDeclaration",
			"InterfaceDeclaration",
			"OpaqueType",
			"TypeAlias",
			"EnumDeclaration",
			"TSDeclareFunction",
			"TSInterfaceDeclaration",
			"TSTypeAliasDeclaration",
			"TSEnumDeclaration",
			"TSModuleDeclaration"
		]
	]
]